# This script (`before.sh.erb`) is sourced directly into the main Bash script
# that is run when the batch job starts up. It is called before the `script.sh`
# is forked off into a separate process.
#
# There are some helpful Bash functions that are made available to this script
# that encapsulate commonly used routines when initializing a web server:
#
#   - find_port
#       Find available port in range [$1..$2]
#       Default: 2000 65535
#
#   - create_passwd
#       Generate random alphanumeric password with $1 characters
#       Default: 32
#
# We **MUST** supply the following environment variables in this
# `before.sh.erb` script so that a user can connect back to the web server when
# it is running (case-sensitive variable names):
#
#   - $host (already defined earlier, so no need to define again)
#       The host that the web server is listening on
#
#   - $port
#       The port that the web server is listening on
#
#   - $api_key
#       The plain text api key used to authenticate to the web server with

# Export the module function if it exists
# Export the module function if it exists
[[ $(type -t module) == "function" ]] && export -f module

# Define the prefix and token file path
prefix="rr"
token_file="${HOME}/${prefix}-token.txt"

# Check if the token file exists
if [[ -f "$token_file" ]]; then
  # If the file exists, read its content as the password
  password=$(cat "$token_file")
else
  # If the file doesn't exist, generate a new password
  password="${prefix}-$(create_passwd 32)"
  
  # Save the new password to the token file
  echo "$password" > "$token_file"
fi

# Find available port to run server on
port=$(find_port)
container="/path/to/your/container/here.sif"

# Export the required variables
export API_TOKEN="${password}"
export BASE_URL="/node/${host}/${port}"
export PORT=${port}
